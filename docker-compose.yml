version: '3.8'

services:
  # Database
  postgres:
    image: postgres:13-alpine
    container_name: codebridge-postgres
    environment:
      POSTGRES_USER: codebridge
      POSTGRES_PASSWORD: codebridge
      POSTGRES_DB: codebridge
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - codebridge-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U codebridge"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  gateway:
    build:
      context: ./codebridge-gateway
      dockerfile: Dockerfile
    container_name: codebridge-gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8080
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/codebridge
      SPRING_DATASOURCE_USERNAME: codebridge
      SPRING_DATASOURCE_PASSWORD: codebridge
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - codebridge-network

  # User Service
  user-service:
    build:
      context: ./codebridge-user-service
      dockerfile: Dockerfile
    container_name: codebridge-user-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8081
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/codebridge
      SPRING_DATASOURCE_USERNAME: codebridge
      SPRING_DATASOURCE_PASSWORD: codebridge
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - codebridge-network

  # Docker Service
  docker-service:
    build:
      context: ./codebridge-docker-service
      dockerfile: Dockerfile
    container_name: codebridge-docker-service
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8084
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/codebridge
      SPRING_DATASOURCE_USERNAME: codebridge
      SPRING_DATASOURCE_PASSWORD: codebridge
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - codebridge-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # Server Service
  server-service:
    build:
      context: ./codebridge-server-service
      dockerfile: Dockerfile
    container_name: codebridge-server-service
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8085
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/codebridge
      SPRING_DATASOURCE_USERNAME: codebridge
      SPRING_DATASOURCE_PASSWORD: codebridge
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - codebridge-network

  # API Testing Service
  api-testing-service:
    build:
      context: ./codebridge-api-testing-service
      dockerfile: Dockerfile
    container_name: codebridge-api-testing-service
    ports:
      - "8086:8086"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8086
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/codebridge
      SPRING_DATASOURCE_USERNAME: codebridge
      SPRING_DATASOURCE_PASSWORD: codebridge
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - codebridge-network

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: codebridge-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - codebridge-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: codebridge-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - codebridge-network
    depends_on:
      - prometheus

networks:
  codebridge-network:
    driver: bridge

volumes:
  postgres-data:
  prometheus-data:
  grafana-data:

