spring:
  application:
    name: server-service
  datasource:
    url: jdbc:postgresql://localhost:5432/codebridge_server
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
  flyway:
    enabled: true
    baseline-on-migrate: true
  cloud:
    config:
      enabled: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/auth/realms/codebridge
          jwk-set-uri: http://localhost:8080/auth/realms/codebridge/protocol/openid-connect/certs
  data:
    redis:
      host: localhost # Default, replace with actual Redis host if different
      port: 6379     # Default Redis port
      # password: your-redis-password # Uncomment and set if Redis is password protected
      # ssl: false # Set to true if using SSL/TLS for Redis connection
      # timeout: 2000 # Connection timeout in ms
      # lettuce: # Example for Lettuce-specific pool properties if needed later
      #   pool:
      #     max-active: 8
      #     max-idle: 8
      #     min-idle: 0
  rabbitmq:
    host: localhost  # Default, replace with actual RabbitMQ host
    port: 5672       # Default RabbitMQ port
    username: guest  # Default, replace with actual username
    password: guest  # Default, replace with actual password
    # virtual-host: / # Optional: specify virtual host if not default
    # ssl:
    #   enabled: false # Set to true for SSL
    #   key-store: path/to/keystore.p12
    #   key-store-password: keystore-password
    #   trust-store: path/to/truststore.p12
    #   trust-store-password: truststore-password

server:
  port: 8083
  servlet:
    context-path: /api/server

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.codebridge: DEBUG
    org.springframework: INFO
    org.hibernate: INFO

ssh:
  connection:
    timeout: 30000
    retry-count: 3
    retry-delay: 5000
  key-storage:
    path: /tmp/codebridge/ssh-keys

# Properties for Session Management (DB only now locally) and JWT
codebridge:
  service-urls:
    session-service: "http://codebridge-session-service/api" # Using service discovery and assuming /api base path in session-service
  session:
    # ssh: # SSH session management is delegated to codebridge-session-service
      # timeout-ms: 600000
    # db: # DB session management is delegated to codebridge-session-service
      # timeout-ms: 300000
  rabbitmq: # Application-specific AMQP properties
    activity-log:
      exchange-name: "codebridge.activitylog.exchange"
      queue-name: "codebridge.activitylog.queue"
      routing-key: "codebridge.activitylog.routingkey"
  security:
    jwt:
      # Secret key for validating incoming User JWTs from the main platform/IdP
      # Ensure this is strong and kept secret in production, matching the IdP's signing key
      shared-secret: "your-VERY-secure-SHARED-secret-for-incoming-user-JWTs-REPLACE-THIS-IN-SERVER-SERVICE"

jwt:
  secret: your-very-secure-and-long-jwt-secret-key-replace-this # Replace this with a strong, environment-specific secret
  expiration-ms: 600000 # JWT expiration time (10 minutes), can be same as or different from SSH session timeout
